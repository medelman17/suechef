services:
  # PostgreSQL database for structured data
  postgres:
    image: postgres:17-alpine
    container_name: suechef-postgres
    environment:
      POSTGRES_DB: legal_research
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: suechef_password
      POSTGRES_HOST_AUTH_METHOD: trust
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-postgres.sql:/docker-entrypoint-initdb.d/init-postgres.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d legal_research"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - suechef-network

  # Qdrant vector database
  qdrant:
    image: qdrant/qdrant:v1.14.1
    container_name: suechef-qdrant
    ports:
      - "6333:6333"
      - "6334:6334"
    volumes:
      - qdrant_data:/qdrant/storage
    environment:
      QDRANT__SERVICE__HTTP_PORT: 6333
      QDRANT__SERVICE__GRPC_PORT: 6334
    healthcheck:
      test: ["CMD-SHELL", "timeout 5s bash -c '</dev/tcp/localhost/6333' || exit 1"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - suechef-network

  # Neo4j graph database
  neo4j:
    image: neo4j:5.26.7-community
    container_name: suechef-neo4j
    environment:
      NEO4J_AUTH: neo4j/suechef_neo4j_password
      NEO4J_PLUGINS: '["apoc"]'
      NEO4J_apoc_export_file_enabled: true
      NEO4J_apoc_import_file_enabled: true
      NEO4J_apoc_import_file_use__neo4j__config: true
      NEO4J_dbms_security_procedures_unrestricted: apoc.*
      NEO4J_dbms_memory_heap_initial__size: 512m
      NEO4J_dbms_memory_heap_max__size: 2G
      NEO4J_dbms_memory_pagecache_size: 1G
    ports:
      - "7474:7474" # HTTP
      - "7687:7687" # Bolt
    volumes:
      - neo4j_data:/data
      - neo4j_logs:/logs
      - neo4j_import:/var/lib/neo4j/import
      - neo4j_plugins:/plugins
    healthcheck:
      test: ["CMD", "cypher-shell", "-u", "neo4j", "-p", "suechef_neo4j_password", "RETURN 1"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - suechef-network

  # SueChef MCP Server - Modular Architecture (Primary)
  suechef:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: suechef-mcp
    environment:
      # Database connections
      POSTGRES_URL: postgresql://postgres:suechef_password@postgres:5432/legal_research
      QDRANT_URL: http://qdrant:6333
      NEO4J_URI: bolt://neo4j:7687
      NEO4J_USER: neo4j
      NEO4J_PASSWORD: suechef_neo4j_password
      # API keys
      OPENAI_API_KEY: ${OPENAI_API_KEY}
      COURTLISTENER_API_KEY: ${COURTLISTENER_API_KEY}
      # MCP Server configuration
      MCP_HOST: 0.0.0.0
      MCP_PORT: 8000
      MCP_PATH: /mcp
      MCP_LOG_LEVEL: info
    depends_on:
      postgres:
        condition: service_healthy
      qdrant:
        condition: service_healthy
      neo4j:
        condition: service_healthy
    ports:
      - "8000:8000"
    volumes:
      - .:/app
      - suechef_venv:/app/.venv
    working_dir: /app
    command: ["uv", "run", "python", "main.py"]
    healthcheck:
      test: ["CMD", "curl", "-f", "-X", "POST", "-H", "Content-Type: application/json", "-H", "Accept: application/json, text/event-stream", "-d", "{\"jsonrpc\":\"2.0\",\"id\":1,\"method\":\"initialize\",\"params\":{\"protocolVersion\":\"2024-11-05\",\"capabilities\":{},\"clientInfo\":{\"name\":\"health-check\",\"version\":\"1.0\"}}}", "http://localhost:8000/mcp/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - suechef-network

volumes:
  postgres_data:
    driver: local
  qdrant_data:
    driver: local
  neo4j_data:
    driver: local
  neo4j_logs:
    driver: local
  neo4j_import:
    driver: local
  neo4j_plugins:
    driver: local
  suechef_venv:
    driver: local

networks:
  suechef-network:
    driver: bridge
